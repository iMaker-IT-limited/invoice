{"version":3,"sources":["./node_modules/@ionic/core/dist/esm-es5/chunk-353a032e.js","./node_modules/@ionic/core/dist/esm-es5/chunk-4e92c885.js","./node_modules/@ionic/core/dist/esm-es5/chunk-c90aaa66.js","./node_modules/@ionic/core/dist/esm-es5/chunk-cae2ca23.js","./src/app/deals/deals.service.ts","./src/app/deals/details/deals-details.model.ts","./src/app/deals/listing/deals-listing.model.ts","./src/app/fashion/details/fashion-details.model.ts","./src/app/fashion/fashion.service.ts","./src/app/fashion/listing/fashion-listing.model.ts","./src/app/firebase/invoice.model.ts","./src/app/food/details/food-details.model.ts","./src/app/food/food.service.ts","./src/app/food/listing/food-listing.model.ts","./src/app/real-estate/details/real-estate-details.model.ts","./src/app/real-estate/listing/real-estate-listing.model.ts","./src/app/real-estate/real-estate.service.ts","./src/app/showcase/showcase-shell.model.ts","./src/app/showcase/showcase.service.ts","./src/app/travel/details/travel-details.model.ts","./src/app/travel/listing/travel-listing.model.ts","./src/app/travel/travel.service.ts","./src/app/validators/password.validator.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAY,SAAI;AACiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kBAAkB,EAAE;AACtD,+BAA+B,iBAAiB,EAAE;AAClD,kCAAkC,iBAAiB,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA,gDAAgD,sBAAsB,EAAE;AACxE;AACA;AACA;AACA,6CAA6C,QAAQ,+CAAiB;AACtE;AACA,WAAW,iDAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,EAAE;AACkF;;;;;;;;;;;;;AC/CrF;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiH;;;;;;;;;;;;;AC1CjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AAC4L;;;;;;;;;;;;;AChG5L;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,mBAAmB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mCAAmC;AAC3E;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8CAA8C;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;;;;;;;;;;;;;;;;;;;;;;;;;AC9GS;AAGN;AAEX;AAEwC;AACA;AAClB;AACE;AAGlD;IAIE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,sBAAI,uCAAa;aAAjB;YACE,OAAO;gBACL,4CAAK,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAW;gBAC9F,4CAAK,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,CAAW;gBACpD,4CAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,MAA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","file":"common-es5.js","sourcesContent":["var _this = this;\nimport * as tslib_1 from \"tslib\";\nvar hostContext = function (selector, el) {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nvar createColorClasses = function (color) {\n    var _a;\n    return (typeof color === 'string' && color.length > 0) ? (_a = {\n            'ion-color': true\n        },\n        _a[\"ion-color-\" + color] = true,\n        _a) : undefined;\n};\nvar getClassList = function (classes) {\n    if (classes !== undefined) {\n        var array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(function (c) { return c != null; })\n            .map(function (c) { return c.trim(); })\n            .filter(function (c) { return c !== ''; });\n    }\n    return [];\n};\nvar getClassMap = function (classes) {\n    var map = {};\n    getClassList(classes).forEach(function (c) { return map[c] = true; });\n    return map;\n};\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nvar openURL = function (url, ev, direction) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n    var router;\n    return tslib_1.__generator(this, function (_a) {\n        if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n            router = document.querySelector('ion-router');\n            if (router) {\n                if (ev != null) {\n                    ev.preventDefault();\n                }\n                return [2 /*return*/, router.push(url, direction)];\n            }\n        }\n        return [2 /*return*/, false];\n    });\n}); };\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nvar hapticSelection = function () {\n    var engine = window.TapticEngine;\n    if (engine) {\n        engine.selection();\n    }\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nvar hapticSelectionStart = function () {\n    var engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionStart();\n    }\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nvar hapticSelectionChanged = function () {\n    var engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionChanged();\n    }\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nvar hapticSelectionEnd = function () {\n    var engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionEnd();\n    }\n};\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n","var rIC = function (callback) {\n    if ('requestIdleCallback' in window) {\n        window.requestIdleCallback(callback);\n    }\n    else {\n        setTimeout(callback, 32);\n    }\n};\nvar hasShadowDom = function (el) {\n    return !!el.shadowRoot && !!el.attachShadow;\n};\nvar findItemLabel = function (componentEl) {\n    var itemEl = componentEl.closest('ion-item');\n    if (itemEl) {\n        return itemEl.querySelector('ion-label');\n    }\n    return null;\n};\nvar renderHiddenInput = function (always, container, name, value, disabled) {\n    if (always || hasShadowDom(container)) {\n        var input = container.querySelector('input.aux-input');\n        if (!input) {\n            input = container.ownerDocument.createElement('input');\n            input.type = 'hidden';\n            input.classList.add('aux-input');\n            container.appendChild(input);\n        }\n        input.disabled = disabled;\n        input.name = name;\n        input.value = value || '';\n    }\n};\nvar clamp = function (min, n, max) {\n    return Math.max(min, Math.min(n, max));\n};\nvar assert = function (actual, reason) {\n    if (!actual) {\n        var message = 'ASSERT: ' + reason;\n        console.error(message);\n        debugger; // tslint:disable-line\n        throw new Error(message);\n    }\n};\nvar now = function (ev) {\n    return ev.timeStamp || Date.now();\n};\nvar pointerCoord = function (ev) {\n    // get X coordinates for either a mouse click\n    // or a touch depending on the given event\n    if (ev) {\n        var changedTouches = ev.changedTouches;\n        if (changedTouches && changedTouches.length > 0) {\n            var touch = changedTouches[0];\n            return { x: touch.clientX, y: touch.clientY };\n        }\n        if (ev.pageX !== undefined) {\n            return { x: ev.pageX, y: ev.pageY };\n        }\n    }\n    return { x: 0, y: 0 };\n};\n/**\n * @hidden\n * Given a side, return if it should be on the end\n * based on the value of dir\n * @param side the side\n * @param isRTL whether the application dir is rtl\n */\nvar isEndSide = function (side) {\n    var isRTL = document.dir === 'rtl';\n    switch (side) {\n        case 'start': return isRTL;\n        case 'end': return !isRTL;\n        default:\n            throw new Error(\"\\\"\" + side + \"\\\" is not a valid value for [side]. Use \\\"start\\\" or \\\"end\\\" instead.\");\n    }\n};\nvar debounceEvent = function (event, wait) {\n    var original = event._original || event;\n    return {\n        _original: event,\n        emit: debounce(original.emit.bind(original), wait)\n    };\n};\nvar debounce = function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timer;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timer);\n        timer = setTimeout.apply(void 0, [func, wait].concat(args));\n    };\n};\nexport { rIC as a, assert as b, clamp as c, debounceEvent as d, debounce as e, findItemLabel as f, hasShadowDom as h, isEndSide as i, now as n, pointerCoord as p, renderHiddenInput as r };\n","/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nvar sanitizeDOMString = function (untrustedString) {\n    try {\n        if (typeof untrustedString !== 'string' || untrustedString === '') {\n            return untrustedString;\n        }\n        /**\n         * Create a document fragment\n         * separate from the main DOM,\n         * create a div to do our work in\n         */\n        var documentFragment_1 = document.createDocumentFragment();\n        var workingDiv = document.createElement('div');\n        documentFragment_1.appendChild(workingDiv);\n        workingDiv.innerHTML = untrustedString;\n        /**\n         * Remove any elements\n         * that are blocked\n         */\n        blockedTags.forEach(function (blockedTag) {\n            var getElementsToRemove = documentFragment_1.querySelectorAll(blockedTag);\n            for (var elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n                var element = getElementsToRemove[elementIndex];\n                if (element.parentNode) {\n                    element.parentNode.removeChild(element);\n                }\n                else {\n                    documentFragment_1.removeChild(element);\n                }\n                /**\n                 * We still need to sanitize\n                 * the children of this element\n                 * as they are left behind\n                 */\n                var childElements = getElementChildren(element);\n                /* tslint:disable-next-line */\n                for (var childIndex = 0; childIndex < childElements.length; childIndex++) {\n                    sanitizeElement(childElements[childIndex]);\n                }\n            }\n        });\n        /**\n         * Go through remaining elements and remove\n         * non-allowed attribs\n         */\n        // IE does not support .children on document fragments, only .childNodes\n        var documentFragmentChildren = getElementChildren(documentFragment_1);\n        /* tslint:disable-next-line */\n        for (var childIndex = 0; childIndex < documentFragmentChildren.length; childIndex++) {\n            sanitizeElement(documentFragmentChildren[childIndex]);\n        }\n        // Append document fragment to div\n        var fragmentDiv = document.createElement('div');\n        fragmentDiv.appendChild(documentFragment_1);\n        // First child is always the div we did our work in\n        var getInnerDiv = fragmentDiv.querySelector('div');\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n    }\n    catch (err) {\n        console.error(err);\n        return '';\n    }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\nvar sanitizeElement = function (element) {\n    // IE uses childNodes, so ignore nodes that are not elements\n    if (element.nodeType && element.nodeType !== 1) {\n        return;\n    }\n    for (var i = element.attributes.length - 1; i >= 0; i--) {\n        var attribute = element.attributes[i];\n        var attributeName = attribute.name;\n        // remove non-allowed attribs\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n            element.removeAttribute(attributeName);\n            continue;\n        }\n        // clean up any allowed attribs\n        // that attempt to do any JS funny-business\n        var attributeValue = attribute.value;\n        /* tslint:disable-next-line */\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n            element.removeAttribute(attributeName);\n        }\n    }\n    /**\n     * Sanitize any nested children\n     */\n    var childElements = getElementChildren(element);\n    /* tslint:disable-next-line */\n    for (var i = 0; i < childElements.length; i++) {\n        sanitizeElement(childElements[i]);\n    }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\nvar getElementChildren = function (element) {\n    return (element.children != null) ? element.children : element.childNodes;\n};\nvar allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nvar blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\nexport { sanitizeDOMString as s };\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport dayjs from 'dayjs';\n\nimport { DealsListingModel } from './listing/deals-listing.model';\nimport { DealsDetailsModel } from './details/deals-details.model';\nimport { DataStore } from '../shell/data-store';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class DealsService {\n  private listingDataStore: DataStore<DealsListingModel>;\n  private detailsDataStore: DataStore<DealsDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  get relativeDates(): Array<string> {\n    return [\n      dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string,\n      dayjs().add(7, 'day').format('MM/DD/YYYY') as string,\n      dayjs().subtract(1, 'month').format('MM/DD/YYYY') as string,\n      dayjs().add(2, 'month').format('MM/DD/YYYY') as string\n    ];\n  }\n\n  public getListingDataSource(): Observable<DealsListingModel> {\n    return this.http.get<DealsListingModel>('./assets/sample-data/deals/listing.json').pipe(\n      map(listingData => {\n        // using rest operator to divide the data https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb\n        const { items, ...otherData } = listingData;\n\n        const itemsWithRelativeDates = items.map((dealItem, index) => {\n          // Relative date (better to showcase UI micro-interactions)\n          return { ...dealItem, expirationDate: this.relativeDates[index] };\n        });\n        // using spread operator to concat the data https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb\n        return { ...otherData, items: itemsWithRelativeDates };\n      })\n    );\n  }\n\n  public getListingStore(dataSource: Observable<DealsListingModel>): DataStore<DealsListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: DealsListingModel = new DealsListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(): Observable<DealsDetailsModel> {\n    return this.http.get<DealsDetailsModel>('./assets/sample-data/deals/details.json').pipe(\n      map(detailsData => {\n        const expirationDate = dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string;\n        return { ...detailsData, expirationDate };\n      })\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<DealsDetailsModel>): DataStore<DealsDetailsModel> {\n\n    // Initialize the model specifying that it is a shell model\n    const shellModel: DealsDetailsModel = new DealsDetailsModel();\n    this.detailsDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.detailsDataStore.load(dataSource);\n\n    return this.detailsDataStore;\n  }\n\n}\n","import dayjs from 'dayjs';\n\nimport { ShellModel } from '../../shell/data-store';\n\nexport class DealsDetailsModel extends ShellModel {\n  showcaseImages: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  previewImage: string;\n  logo: string;\n  name: string;\n  code: string;\n  description: string;\n  // Default mock value\n  // expirationDate = '03/03/2019';\n  expirationDate: string = dayjs().add(5, 'day').format('MM/DD/YYYY HH:mm:ss') as string;\n  relatedDeals: Array<{ logo: string, name: string, description: string }> = [\n    {\n      logo: '',\n      name: '',\n      description: ''\n    },\n    {\n      logo: '',\n      name: '',\n      description: ''\n    },\n    {\n      logo: '',\n      name: '',\n      description: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import dayjs from 'dayjs';\n\nimport { ShellModel } from '../../shell/data-store';\n\nexport class DealsItemModel {\n  slug: string;\n  logo: string;\n  name: string;\n  code: string;\n  description: string;\n  // Default mock value\n  // expirationDate = '12/01/2018';\n  expirationDate: string = dayjs().add(5, 'day').format('MM/DD/YYYY HH:mm:ss') as string;\n}\n\nexport class DealsListingModel extends ShellModel {\n  items: Array<DealsItemModel> = [\n    new DealsItemModel(),\n    new DealsItemModel(),\n    new DealsItemModel(),\n    new DealsItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class FashionDetailsModel extends ShellModel {\n  showcaseImages: Array<{type: string, source: string}> = [\n    {\n      type: '',\n      source: ''\n    },\n    {\n      type: '',\n      source: ''\n    },\n    {\n      type: '',\n      source: ''\n    }\n  ];\n  name: string;\n  brand: string;\n  price: number;\n  salePrice: number;\n  colorVariants: Array<{name: string, value: string, default: boolean}> = [\n    {\n      name: '',\n      value: '',\n      default: false\n    },\n    {\n      name: '',\n      value: '',\n      default: false\n    },\n    {\n      name: '',\n      value: '',\n      default: false\n    }\n  ];\n  sizeVariants: Array<{name: string, value: string, default: boolean}> = [\n    {\n      name: '',\n      value: '',\n      default: false\n    },\n    {\n      name: '',\n      value: '',\n      default: false\n    },\n    {\n      name: '',\n      value: '',\n      default: false\n    }\n  ];\n  description: string;\n  careInstructions: string;\n  upc: string;\n  relatedProducts: Array<{id: number}> = [\n    {\n      id: null\n    },\n    {\n      id: null\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { FashionListingModel } from './listing/fashion-listing.model';\nimport { FashionDetailsModel } from './details/fashion-details.model';\nimport { DataStore } from '../shell/data-store';\n\n@Injectable()\nexport class FashionService {\n  private listingDataStore: DataStore<FashionListingModel>;\n  private detailsDataStore: DataStore<FashionDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<FashionListingModel> {\n    return this.http.get<FashionListingModel>('./assets/sample-data/fashion/listing.json');\n  }\n\n  public getListingStore(dataSource: Observable<FashionListingModel>): DataStore<FashionListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: FashionListingModel = new FashionListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(): Observable<FashionDetailsModel> {\n    return this.http.get<FashionDetailsModel>('./assets/sample-data/fashion/details.json');\n  }\n\n  public getDetailsStore(dataSource: Observable<FashionDetailsModel>): DataStore<FashionDetailsModel> {\n    // Use cache if available\n    if (!this.detailsDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: FashionDetailsModel = new FashionDetailsModel();\n      this.detailsDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.detailsDataStore.load(dataSource);\n    }\n    return this.detailsDataStore;\n  }\n\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class FashionItemModel {\n  price: number;\n  salePrice: number;\n  image: string;\n  squareImage: string;\n  showcaseImages: Array<string>;\n  name: string;\n  style: string;\n  relatedProducts: Array<string>;\n}\n\nexport class FashionListingModel extends ShellModel {\n  items: Array<FashionItemModel> = [\n    new FashionItemModel(),\n    new FashionItemModel(),\n    new FashionItemModel(),\n    new FashionItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from \"./../shell/data-store\";\n\n// export class FirebaseSkillModel extends ShellModel {\n//     id: string;\n//     name: string;\n\n//     constructor() {\n//         super();\n//     }\n// }\n\n// export class FirebaseEnquiryModel extends ShellModel {\n//     id: string;\n//     cate_1: string;\n//     class_size_lower: string;\n//     class_size_upper: string;\n//     target_user_age_lower: string;\n//     target_user_age_upper: string;\n//     class_length_lower: string;\n//     class_length_upper: string;\n//     teaching_materials: string;\n//     potential_supplier: string;\n//     timestamp: string;\n//     constructor() {\n//         super();\n//     }\n// }\n\n// export class FirebaseSupplierModel extends ShellModel {\n//     id: string;\n//     name: string;\n//     address: string;\n//     average_speed: number;\n//     company_intro: string;\n//     competition_exp: string;\n//     contact_person: string;\n//     downloadURL: string;\n//     editor_choice: boolean;\n//     email: string;\n//     hashtag: any;\n//     isShell: boolean;\n//     phone: number;\n//     provider: string;\n//     reply_rate: number;\n//     timestamp: any;\n//     tutor_qual: string;\n//     url: string;\n//     path: any;\n//     constructor() {\n//         super();\n//     }\n// }\n\nexport class ContactModel extends ShellModel {\n\n    \"Created Time\": string;\n    \"Last Modified Time\": string;\n    \"Customer ID\": number;\n    \"Customer Name\": string;\n    \"Display Name\": string;\n    \"Company Name\": string;\n    \"Salutation\": string;\n    \"First Name\": string;\n    \"Last Name\": string;\n    \"EmailID\": string;\n    \"Phone\": string;\n    \"MobilePhone\": string;\n    \"Skype Identity\": string;\n    \"Facebook\": string;\n    \"Twitter\": string;\n    \"Department\": string;\n    \"Designation\": string;\n    \"Credit Limit\": number;\n    \"Price List\": string;\n    \"Payment Terms\": number;\n    \"Payment Terms Label\": string;\n    \"Currency Code\": string;\n    \"Notes\": string;\n    \"Website\": string;\n    \"Contact Type\": string;\n    \"Customer Sub Type\": string;\n    \"Customer Address ID\": number;\n    \"Billing Attention\": string;\n    \"Billing Address\": string;\n    \"Billing Street2\": string;\n    \"Billing City\": string;\n    \"Billing State\": string;\n    \"Billing Country\": string;\n    \"Billing Code\": string;\n    \"Billing Phone\": string;\n    \"Billing Fax\": string;\n    \"Shipping Attention\": string;\n    \"Shipping Address\": string;\n    \"Shipping Street2\": string;\n    \"Shipping City\": string;\n    \"Shipping State\": string;\n    \"Shipping Country\": string;\n    \"Shipping Code\": string;\n    \"Shipping Phone\": string;\n    \"Shipping Fax\": string;\n    \"Source\": number;\n    \"Reference ID\": string;\n    \"Payment Reminder\": number;\n    \"Last Sync Time\": string;\n    \"Status\": string;\n    \"Owner Name\": string;\n    \"CF.Email\": string;\n    \"CF.Phone\": string;\n    \"CF.Company Name\": string;\n\n    constructor() {\n        super();\n    }\n}\n\nexport class ItemModel extends ShellModel {\n\n    \"Item ID\": number;\n    \"Item Name\": string;\n    \"Description\": string;\n    \"Rate\": number;\n    \"Tax1 Name\": string;\n    \"Tax1 Percentage\": string;\n    \"Tax1 Type\": string;\n    \"Product Type\": string;\n    \"Source\": number;\n    \"Reference ID\": string;\n    \"Last Sync Time\": string;\n    \"Status\": string;\n    \"Usage unit\": string;\n\n    // by default = 1\n    \"quantity\": number;\n    // by default = Rate x quantity \n    // not so important variable as we only care about the total amount in a quatation\n    \"amount\": number;\n    constructor() {\n        super();\n    }\n}\n\nexport class EstimateModel extends ShellModel {\n\n    \"Estimate Date\": string;\n    \"Estimate ID\": number;\n    \"Estimate Number\": string;\n    \"Estimate Status\": string;\n    \"Customer ID\": number;\n    \"Expiry Date\": string;\n    \"PurchaseOrder\": string;\n    \"Currency Code\": string;\n    \"Exchange Rate\": number;\n    \"Discount Type\": string;\n    \"Is Discount Before Tax\": number;\n    \"Entity Discount Percent\": number;\n    \"Is Inclusive Tax\": number;\n    \"SubTotal\": number;\n    \"Total\": number;\n    \"Adjustment\": number;\n    \"Notes\": string;\n    'Terms': string;\n    \"Terms & Conditions\": string;\n    \"Customer Name\": string;\n    \"Project Name\": string;\n    \"Project ID\": string;\n    \"Sales person\": string;\n    \"Billing Address\": string;\n    \"Billing City\": string;\n    \"Billing State\": string;\n    \"Billing Country\": string;\n    \"Billing Code\": string;\n    \"Billing Fax\": string;\n    \"Template Name\": string;\n    \"Adjustment Description\": string;\n    \"Shipping Address\": string;\n    \"Shipping City\": string;\n    \"Shipping State\": string;\n    \"Shipping Country\": string;\n    \"Shipping Code\": string;\n    \"Shipping Fax\": string;\n    \"Source\": number;\n    \"Reference ID\": string;\n    \"Last Sync Time\": string;\n    \"Shipping Charge\": number;\n    \"Shipping Charge Tax ID\": string;\n    \"Shipping Charge Tax Amount\": string;\n    \"Shipping Charge Tax Name\": string;\n    \"Shipping Charge Tax %\": string;\n    \"Shipping Charge Tax Type\": string;\n    \"Item Name\": string;\n    \"Item Desc\": string;\n    \"Quantity\": number;\n    \"Discount\": number;\n    \"Discount Amount\": number;\n    \"Item Tax Amount\": number;\n    \"Item Total\": number;\n    \"Account\": string;\n    \"SKU\": string;\n    \"Usage unit\": string;\n    \"Item Price\": number;\n    \"Tax ID\": string;\n    \"Item Tax\": string;\n    \"Item Tax %\": string;\n    \"Item Tax Type\": string;\n    salesList: {\n        \"Item Name\": string;\n        Description: string;\n        quantity: number;\n        Rate: number;\n        amount: number;\n    }[] = [];\n\n    constructor() {\n        super();\n    }\n}\n\nexport class InvoiceModel extends ShellModel {\n\n    \"Invoice Date\": string;\n    \"Invoice ID\": number;\n    \"Invoice Number\": string;\n    \"Estimate Number\": string;\n    \"Invoice Status\": string;\n    \"Customer Name\": string;\n    \"Company Name\": string;\n    \"Customer ID\": number;\n    \"Branch ID\": string;\n    \"Branch Name\": string;\n    \"Due Date\": string;\n    \"Expected Payment Date\": string;\n    \"PurchaseOrder\": string;\n    \"Template Name\": string;\n    \"Currency Code\": string;\n    \"Exchange Rate\": number;\n    \"Discount Type\": string;\n    \"Is Discount Before Tax\": boolean;\n    \"Entity Discount Percent\": number;\n    \"Entity Discount Amount\": number;\n    \"Item Name\": string;\n    \"Item Desc\": string;\n    \"Quantity\": number;\n    \"Usage unit\": string;\n    \"Item Price\": number;\n    \"Discount\": number;\n    \"Discount Amount\": number;\n    \"Expense Reference ID\": string;\n    \"Project ID\": string;\n    \"Project Name\": string;\n    \"Is Inclusive Tax\": boolean;\n    \"Tax1 ID\": string;\n    \"Item Tax1\": string;\n    \"Item Tax1 %\": string;\n    \"Item Tax1 Amount\": string;\n    \"Item Tax1 Type\": string;\n    \"Item Total\": number;\n    \"SubTotal\": number;\n    \"Total\": number;\n    \"Balance\": number;\n    \"Shipping Charge\": number;\n    \"Shipping Charge Tax ID\": string;\n    \"Shipping Charge Tax Amount\": string;\n    \"Shipping Charge Tax Name\": string;\n    \"Shipping Charge Tax %\": string;\n    \"Shipping Charge Tax Type\": string;\n    \"Adjustment\": number;\n    \"Adjustment Description\": string;\n    \"Round Off\": number;\n    \"Sales person\": string;\n    \"Payment Terms\": number;\n    \"Payment Terms Label\": string;\n    \"Last Payment Date\": string;\n    \"Notes\": string;\n    \"Terms & Conditions\": string;\n    \"Subject\": string;\n    \"LateFee Name\": string;\n    \"LateFee Type\": string;\n    \"LateFee Rate\": number;\n    \"LateFee Amount\": number;\n    \"LateFee Frequency\": string;\n    \"WriteOff Date\": string;\n    \"WriteOff Exchange Rate\": number;\n    \"WriteOff Amount\": number;\n    \"Recurrence Name\": string;\n    \"PayPal\": boolean;\n    \"Authorize.Net\": boolean;\n    \"Google Checkout\": boolean;\n    \"Payflow Pro\": boolean;\n    \"Stripe\": boolean;\n    \"2Checkout\": boolean;\n    \"Braintree\": boolean;\n    \"Forte\": boolean;\n    \"WorldPay\": boolean;\n    \"Payments Pro\": boolean;\n    \"Square\": boolean;\n    \"WePay\": boolean;\n    \"Razorpay\": boolean;\n    \"GoCardless\": boolean;\n    \"Partial Payments\": boolean;\n    \"Billing Address\": string;\n    \"Billing City\": string;\n    \"Billing State\": string;\n    \"Billing Country\": string;\n    \"Billing Code\": string;\n    \"Billing Fax\": string;\n    \"Billing Phone\": string;\n    \"Shipping Address\": string;\n    \"Shipping City\": string;\n    \"Shipping State\": string;\n    \"Shipping Country\": string;\n    \"Shipping Code\": string;\n    \"Shipping Fax\": string;\n    \"Shipping Phone Number\": string;\n    \"Terms\": string;\n    salesList: {\n        \"Item Name\": string;\n        Description: string;\n        quantity: number;\n        Rate: number;\n        amount: number;\n    }[] = [];\n\n    constructor() {\n        super();\n    }\n}","import { ShellModel } from '../../shell/data-store';\n\nexport class FoodDetailsModel extends ShellModel {\n  icon: string;\n  slug: string;\n  showcaseImage: string;\n  name: string;\n  shortName: string;\n  style: string;\n  priceRange: number;\n  avgRating: number;\n  ratings: Array<{concept: string, rate: number}> = [\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    }\n  ];\n  reviewsCount: number;\n  openHours: Array<{day: string, open: boolean, hourFrom: string, hourTo: string}> = [\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: false,\n      hourFrom: '',\n      hourTo: ''\n    }\n  ];\n  location: {\n    address: string,\n    city: string,\n    latlng: string,\n    mapImage: string\n  };\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  usersPictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n  popularDishes: Array<{name: string, rate: number, votesCount: number}> = [\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    },\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    }\n  ];\n  reviews: Array<{\n    user: {image: string, name: string, reviewsCount: number, points: number},\n    avgRating: number,\n    ratings: Array<{concept: string, rate: number}>,\n    publishedAt: string,\n    message: string\n  }> = [\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    }\n  ];\n  popularRecipes: Array<{\n    showcaseImage: string,\n    name: string,\n    chef: {name: string, image: string},\n    difficulty: string,\n    time: string,\n    calories: string,\n    chefExtract: string\n  }> = [\n    {\n      showcaseImage: '',\n      name: '',\n      chef: {\n        name: '',\n        image: ''\n      },\n      difficulty: '',\n      time: '',\n      calories: '',\n      chefExtract: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { flatMap} from 'rxjs/operators';\n\nimport { FoodListingModel } from './listing/food-listing.model';\nimport { FoodDetailsModel } from './details/food-details.model';\nimport { DataStore } from '../shell/data-store';\n\n@Injectable()\nexport class FoodService {\n\n  private listingDataStore: DataStore<FoodListingModel>;\n  private detailsDataStore: DataStore<FoodDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<FoodListingModel> {\n    return this.http.get<FoodListingModel>('./assets/sample-data/food/listing.json');\n  }\n\n  public getListingStore(dataSource: Observable<FoodListingModel>): DataStore<FoodListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: FoodListingModel = new FoodListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(slug: string): Observable<FoodDetailsModel> {\n    return this.http.get<{items: Array<FoodDetailsModel>}>('./assets/sample-data/food/details.json')\n    .pipe(\n      flatMap(details => details.items.filter(item => item.slug === slug))\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<FoodDetailsModel>): DataStore<FoodDetailsModel> {\n\n    // Initialize the model specifying that it is a shell model\n    const shellModel: FoodDetailsModel = new FoodDetailsModel();\n    this.detailsDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.detailsDataStore.load(dataSource);\n\n    return this.detailsDataStore;\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class FoodItemModel {\n  icon: string;\n  image: string;\n  name: string;\n  address: string;\n  priceRange: number;\n  rating: number;\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  pictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n}\n\nexport class FoodListingModel extends ShellModel {\n  items: Array<FoodItemModel> = [\n    new FoodItemModel(),\n    new FoodItemModel(),\n    new FoodItemModel(),\n    new FoodItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class RealEstateDetailsModel extends ShellModel {\n  picture: string;\n  location: {\n    address: string,\n    city: string,\n    latlng: string,\n    mapImage: string\n  };\n  description: string;\n  price: string;\n  accommodations: {\n    guests: number,\n    bedrooms: number,\n    patios: number,\n    bathrooms: number\n  };\n  amenities: Array<{name: string, icon: string}> = [\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class RealEstateItemModel {\n  slug: string;\n  picture: string;\n  address: string;\n  price: string;\n  liked: boolean;\n  accommodations: {\n    guests: number,\n    bedrooms: number,\n    beds: number,\n    bathrooms: number\n  };\n  amenities: Array<{name: string, icon: string}> = [\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    }\n  ];\n}\n\nexport class RealEstateListingModel extends ShellModel {\n  items: Array<RealEstateItemModel> = [\n    new RealEstateItemModel(),\n    new RealEstateItemModel(),\n    new RealEstateItemModel(),\n    new RealEstateItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { RealEstateListingModel } from './listing/real-estate-listing.model';\nimport { RealEstateDetailsModel } from './details/real-estate-details.model';\nimport { DataStore } from '../shell/data-store';\n\n@Injectable()\nexport class RealEstateService {\n  private listingDataStore: DataStore<RealEstateListingModel>;\n  private detailsDataStore: DataStore<RealEstateDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<RealEstateListingModel> {\n    return this.http.get<RealEstateListingModel>('./assets/sample-data/real-estate/listing.json');\n  }\n\n  public getListingStore(dataSource: Observable<RealEstateListingModel>): DataStore<RealEstateListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: RealEstateListingModel = new RealEstateListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(): Observable<RealEstateDetailsModel> {\n    return this.http.get<RealEstateDetailsModel>('./assets/sample-data/real-estate/details.json');\n  }\n\n  public getDetailsStore(dataSource: Observable<RealEstateDetailsModel>): DataStore<RealEstateDetailsModel> {\n    // Use cache if available\n    if (!this.detailsDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: RealEstateDetailsModel = new RealEstateDetailsModel();\n      this.detailsDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.detailsDataStore.load(dataSource);\n    }\n    return this.detailsDataStore;\n  }\n}\n","import { ShellModel } from '../shell/data-store';\n\nexport class ShowcaseShellModel extends ShellModel {\n  cover: string;\n  image: string;\n  title: string;\n  description: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseShellUserModel extends ShellModel {\n  email: string;\n  first_name: string;\n  last_name: string;\n  avatar: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseCommentModel extends ShellModel {\n  postId: number;\n  name: string;\n  email: string;\n  body: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcasePostModel extends ShellModel {\n  id: number;\n  title: string;\n  body: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseTaskModel extends ShellModel {\n  id: number;\n  userId: number;\n  title: string;\n  completed: boolean;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseUser2Model extends ShellModel {\n  id: number;\n  name: string;\n  email: string;\n  username: string;\n  company?: ShowcaseCompanyModel;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseCompanyModel extends ShellModel {\n  catchPhrase: string;\n  name: string;\n  bs: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseCombinedTaskUserModel extends ShowcaseTaskModel {\n  user: ShowcaseUser2Model;\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, combineLatest, of, forkJoin, ReplaySubject, merge } from 'rxjs';\nimport { delay, finalize, tap, map, filter, concatMap } from 'rxjs/operators';\n// tslint:disable-next-line:max-line-length\nimport { ShowcaseShellModel, ShowcasePostModel, ShowcaseCommentModel, ShowcaseCombinedTaskUserModel, ShowcaseUser2Model, ShowcaseTaskModel, ShowcaseShellUserModel, ShowcaseCompanyModel } from './showcase-shell.model';\nimport { DataStore, ShellModel } from '../shell/data-store';\nimport { TravelListingModel } from '../travel/listing/travel-listing.model';\nimport { FashionListingModel } from '../fashion/listing/fashion-listing.model';\n\n@Injectable()\nexport class ShowcaseService {\n  private showcaseDataStore: DataStore<ShowcaseShellModel>;\n  private openDataStream: ReplaySubject<Array<ShowcaseShellUserModel>> = new ReplaySubject<Array<ShowcaseShellUserModel>>();\n\n  constructor(private http: HttpClient) { }\n\n  public getDataSourceWithDelay(): Observable<ShowcaseShellModel> {\n    return this.http.get<ShowcaseShellModel>('./assets/sample-data/showcase/shell.json').pipe(\n      tap(val => {\n        console.log('getData STARTED');\n        // tslint:disable-next-line:no-console\n        console.time('getData Roundtrip');\n      }),\n      delay(5000),\n      finalize(() => {\n        console.log('getData COMPLETED');\n        // tslint:disable-next-line:no-console\n        console.timeEnd('getData Roundtrip');\n      }));\n  }\n\n  public getSimpleDataSource(): Observable<ShowcaseShellModel> {\n    return this.http.get<ShowcaseShellModel>('./assets/sample-data/showcase/shell.json');\n  }\n\n  public getSimpleDataStore(dataSource: Observable<ShowcaseShellModel>): DataStore<ShowcaseShellModel> {\n    // Use cache if available\n    if (!this.showcaseDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: ShowcaseShellModel = new ShowcaseShellModel();\n      this.showcaseDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.showcaseDataStore.load(dataSource);\n    }\n    return this.showcaseDataStore;\n  }\n\n  public getListDataSource(): Observable<any> {\n    return this.http.get('https://reqres.in/api/users').pipe(map(result => result['data']));\n  }\n\n  public getPaginationDataSource(page: number): Observable<any> {\n    return this.http.get('https://reqres.in/api/users?page=' + page).pipe(\n      map(result => result['data']),\n      filter(results => results.length > 0)\n    );\n  }\n\n  public getMultipleDataSourceA(): Observable<TravelListingModel> {\n    return this.http.get<TravelListingModel>('./assets/sample-data/travel/listing.json');\n  }\n\n  public getMultipleDataSourceB(): Observable<FashionListingModel> {\n      return this.http.get<FashionListingModel>('./assets/sample-data/fashion/listing.json');\n  }\n\n  public getDependantDataSourcePost(): Observable<ShowcasePostModel> {\n    return this.http.get<any>('https://jsonplaceholder.typicode.com/posts/1');\n  }\n\n  // tslint:disable-next-line:max-line-length\n  public getDependantDataSourcePostComments(dependantDataSource: Observable<ShowcasePostModel & ShellModel>): Observable<Array<ShowcaseCommentModel>> {\n    return dependantDataSource.pipe(\n      // Filter user values that are not shells. We need to add this filter if using the combinedUserDataStore timeline\n      filter(post => !post.isShell),\n      concatMap(post => {\n        return this.http.get<any>('https://jsonplaceholder.typicode.com/comments?postId=' + post.id);\n      })\n    );\n  }\n\n  getUser(userId: number): Observable<ShowcaseUser2Model> {\n    return this.http.get<ShowcaseUser2Model>('https://jsonplaceholder.typicode.com/users/' + userId);\n  }\n\n  // get the company details, a subset of the user data\n  getUserSubsetData(userId: number): Observable<ShowcaseCompanyModel> {\n    const dataObservable = this.http.get<ShowcaseUser2Model>('https://jsonplaceholder.typicode.com/users/' + userId);\n\n    return dataObservable.pipe(\n      map((jsonResponse) => {\n        const filteredData: ShowcaseCompanyModel = {\n          ...jsonResponse.company\n        };\n        return filteredData;\n      })\n    );\n  }\n\n  getTasks(): Observable<Array<ShowcaseTaskModel>> {\n    return this.http.get<Array<ShowcaseTaskModel>>('https://jsonplaceholder.typicode.com/todos');\n  }\n\n  // Concat the task with the details of the user\n  public getCombinedTasksUserDataSource(): Observable<Array<ShowcaseCombinedTaskUserModel>> {\n    return this.getTasks().pipe(\n      concatMap(tasks => {\n        const completeTaskData = tasks.map(task => {\n          // for each task retrun a new observable with the ShowcaseCombinedTaskUserModel\n          const taskUser: Observable<ShowcaseUser2Model> = this.getUser(task.userId);\n\n          return combineLatest([\n            of(task),\n            taskUser\n          ]).pipe(\n            map(([taskData, user]: [ShowcaseTaskModel, ShowcaseUser2Model]) => {\n              return {\n                ...taskData,\n                user: user\n              } as ShowcaseCombinedTaskUserModel;\n            })\n          );\n        });\n        return forkJoin(completeTaskData);\n      })\n    );\n  }\n\n  public getOpenDataStream(): Observable<Array<ShowcaseShellUserModel>> {\n    const firstLoadData = this.getPaginationDataSource(1);\n\n    return merge(\n      this.openDataStream.asObservable(),\n      firstLoadData\n    );\n  }\n\n  public pushValuesToOpenStream(): void {\n    const stackedValues = this.getStackedValues();\n\n    this.openDataStream.next(stackedValues);\n  }\n\n  public getStackedValuesDataSource(): Observable<Array<ShowcaseShellUserModel>> {\n    const stackedValues = this.getStackedValues();\n\n    return of(stackedValues).pipe(delay(3000));\n  }\n\n  public getStackedValues(): Array<ShowcaseShellUserModel> {\n    const newUser = {\n      first_name: 'Agustin',\n      last_name: 'Nitsuga',\n      avatar: './assets/sample-images/user/person_1.jpg'\n    } as ShowcaseShellUserModel;\n\n    // Get a random integer between 1 (and only 1) and 'max'\n    const getRand: (max: number, min?: number) => number = (max, min = 1) => {\n      return Math.floor(Math.random() * max) + min;\n    };\n\n    // Randomly send one, two or three users\n    return Array(getRand(3)).fill(newUser);\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class TravelDetailsModel extends ShellModel {\n  image: string;\n  icon: string;\n  name: string;\n  category: string;\n  shortDescription: string;\n  rating: number;\n  reviewsCount: number;\n  tags: Array<string> = new Array(3).fill('');\n  fullDescription: string;\n  openHours: Array<{day: string, open: boolean, hourFrom: string, hourTo: string}> = [\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: false,\n      hourFrom: '',\n      hourTo: ''\n    }\n  ];\n  location: {\n    address: string,\n    city: string,\n    latlng: string,\n    mapImage: string\n  };\n  whereToStay: Array<{picture: string, name: string, rating: number}> = [\n    {\n      picture: '',\n      name: '',\n      rating: null\n    },\n    {\n      picture: '',\n      name: '',\n      rating: null\n    },\n    {\n      picture: '',\n      name: '',\n      rating: null\n    }\n  ];\n  whereToEat: Array<{picture: string, name: string, rating: number}> = [\n    {\n      picture: '',\n      name: '',\n      rating: null\n    },\n    {\n      picture: '',\n      name: '',\n      rating: null\n    },\n    {\n      picture: '',\n      name: '',\n      rating: null\n    }\n  ];\n  relatedActivities: Array<{picture: string, name: string, category: string, rating: number}> = [\n    {\n      picture: '',\n      name: '',\n      category: '',\n      rating: null\n    },\n    {\n      picture: '',\n      name: '',\n      category: '',\n      rating: null\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class TravelItemModel {\n  image: string;\n  icon: string;\n  name: string;\n  description: string;\n  category: string;\n  address: string;\n  rating: number;\n  reviewsCount: number;\n}\n\nexport class TravelListingModel extends ShellModel {\n  items: Array<TravelItemModel> = [\n    new TravelItemModel(),\n    new TravelItemModel(),\n    new TravelItemModel(),\n    new TravelItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { DataStore } from '../shell/data-store';\n\nimport { TravelListingModel } from './listing/travel-listing.model';\nimport { TravelDetailsModel } from './details/travel-details.model';\n\n@Injectable()\nexport class TravelService {\n  private listingDataStore: DataStore<TravelListingModel>;\n  private detailsDataStore: DataStore<TravelDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<TravelListingModel> {\n    return this.http.get<TravelListingModel>('./assets/sample-data/travel/listing.json');\n  }\n\n  public getListingStore(dataSource: Observable<TravelListingModel>): DataStore<TravelListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: TravelListingModel = new TravelListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(): Observable<TravelDetailsModel> {\n    return this.http.get<TravelDetailsModel>('./assets/sample-data/travel/details.json');\n  }\n\n  public getDetailsStore(dataSource: Observable<TravelDetailsModel>): DataStore<TravelDetailsModel> {\n    // Use cache if available\n    if (!this.detailsDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: TravelDetailsModel = new TravelDetailsModel();\n      this.detailsDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.detailsDataStore.load(dataSource);\n    }\n    return this.detailsDataStore;\n  }\n\n}\n","import { FormControl, FormGroup } from '@angular/forms';\n\nexport class PasswordValidator {\n\n  // If our validation fails, we return an object with a key for the error name and a value of true.\n  // Otherwise, if the validation passes, we simply return null because there is no error.\n\n  static areNotEqual(formGroup: FormGroup) {\n    let val;\n    let valid = true;\n\n    for (const key in formGroup.controls) {\n      if (formGroup.controls.hasOwnProperty(key)) {\n        const control: FormControl = <FormControl>formGroup.controls[key];\n\n        if (val === undefined) {\n          val = control.value;\n        } else {\n          if (val !== control.value) {\n            valid = false;\n            break;\n          }\n        }\n      }\n    }\n\n    if (valid) {\n      return null;\n    }\n\n    return {\n      areNotEqual: true\n    };\n  }\n}\n"],"sourceRoot":"webpack:///"}