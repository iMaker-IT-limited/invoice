{"version":3,"sources":["./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.html","./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.html","./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.html","./src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.html","./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.scss","./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.ts","./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking.resolver.ts","./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.scss","./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.ts","./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking.resolver.ts","./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.scss","./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.ts","./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell.resolver.ts","./src/app/showcase/route-resolvers-ux/route-resolvers-ux.module.ts","./src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.scss","./src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.ts"],"names":[],"mappings":"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","file":"route-resolvers-ux-route-resolvers-ux-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"showcase/route-resolvers-ux\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Blocking Resovler Showcase\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"showcase-content\\\">\\n  <section class=\\\"showcase-section\\\">\\n    <p>\\n      Notice how the UX degrades when using <b>Blocking</b> Route Resolvers in Angular\\n    </p>\\n    <ion-row style=\\\"background-color: #FFF; padding: 10px;\\\">\\n      <ion-col size=\\\"12\\\">\\n        <div [ngStyle]=\\\"{'background-image': 'url(' + routeResolveData?.cover + ')'}\\\" style=\\\"background-size: cover; background-repeat: no-repeat;\\\">\\n          <app-aspect-ratio [ratio]=\\\"{w:2, h:1}\\\">\\n            <h4 style=\\\"margin: 10px; text-align: center; color: #FFF;\\\">Heading on top of a cover image</h4>\\n          </app-aspect-ratio>\\n        </div>\\n      </ion-col>\\n      <ion-col size=\\\"4\\\">\\n        <app-aspect-ratio [ratio]=\\\"{w:1, h:1}\\\">\\n          <img [src]=\\\"routeResolveData?.image\\\" alt=\\\"Sample Image\\\" style=\\\"width: 100%; height: 100%;\\\"/>\\n        </app-aspect-ratio>\\n      </ion-col>\\n      <ion-col size=\\\"8\\\">\\n        <h3 style=\\\"margin-top: 0px;\\\">\\n          {{ routeResolveData?.title }}\\n        </h3>\\n        <p>\\n          {{ routeResolveData?.description }}\\n        </p>\\n      </ion-col>\\n    </ion-row>\\n  </section>\\n</ion-content>\\n\"","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"showcase/route-resolvers-ux\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      NON Blocking Resovler Showcase\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"showcase-content\\\">\\n  <section class=\\\"showcase-section\\\">\\n    <p>\\n      With Non-Blocking Resolvers, page transition is immediate. However UX degrades because you are showing a static loading indicator while the server sends data back to the client.\\n    </p>\\n    <ng-container *ngIf=\\\"!routeResolveData\\\">\\n      <div style=\\\"margin: 20px 40px; text-align: center;\\\">\\n        <ion-spinner></ion-spinner>\\n        <p>\\n          <b>You can show a static shell while fetching data from the backend</b>\\n        </p>\\n      </div>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"routeResolveData\\\">\\n      <ion-row style=\\\"background-color: #FFF; padding: 10px;\\\">\\n        <ion-col size=\\\"12\\\">\\n          <div [ngStyle]=\\\"{'background-image': 'url(' + routeResolveData?.cover + ')'}\\\" style=\\\"background-size: cover; background-repeat: no-repeat;\\\">\\n            <app-aspect-ratio [ratio]=\\\"{w:2, h:1}\\\">\\n              <h4 style=\\\"margin: 10px; text-align: center; color: #FFF;\\\">Heading on top of a cover image</h4>\\n            </app-aspect-ratio>\\n          </div>\\n        </ion-col>\\n        <ion-col size=\\\"4\\\">\\n          <app-aspect-ratio [ratio]=\\\"{w:1, h:1}\\\">\\n            <img [src]=\\\"routeResolveData?.image\\\" alt=\\\"Sample Image\\\" style=\\\"width: 100%; height: 100%;\\\"/>\\n          </app-aspect-ratio>\\n        </ion-col>\\n        <ion-col size=\\\"8\\\">\\n          <h3 style=\\\"margin-top: 0px;\\\">\\n            {{ routeResolveData?.title }}\\n          </h3>\\n          <p>\\n            {{ routeResolveData?.description }}\\n          </p>\\n        </ion-col>\\n      </ion-row>\\n    </ng-container>\\n  </section>\\n</ion-content>\\n\"","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"showcase/route-resolvers-ux\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Progressive Shell Showcase\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"showcase-content\\\">\\n  <section class=\\\"showcase-section\\\">\\n    <ion-row style=\\\"background-color: #FFF; padding: 10px;\\\">\\n      <ion-col size=\\\"12\\\">\\n        <app-image-shell class=\\\"add-overlay\\\" animation=\\\"spinner\\\" [mode]=\\\"'cover'\\\" [src]=\\\"routeResolveData?.cover\\\" [alt]=\\\"'Sample Image Cover'\\\">\\n          <app-aspect-ratio [ratio]=\\\"{w:2, h:1}\\\">\\n            <h4 style=\\\"margin: 10px; text-align: center; color: #FFF;\\\">Heading on top of a cover image</h4>\\n          </app-aspect-ratio>\\n        </app-image-shell>\\n      </ion-col>\\n      <ion-col size=\\\"4\\\">\\n        <app-aspect-ratio [ratio]=\\\"{w:1, h:1}\\\">\\n          <app-image-shell animation=\\\"spinner\\\" [src]=\\\"routeResolveData?.image\\\" [alt]=\\\"'Sample Image'\\\"></app-image-shell>\\n        </app-aspect-ratio>\\n      </ion-col>\\n      <ion-col size=\\\"8\\\">\\n        <h3 style=\\\"margin-top: 0px;\\\">\\n          <app-text-shell [data]=\\\"routeResolveData?.title\\\"></app-text-shell>\\n        </h3>\\n        <p>\\n          <app-text-shell animation=\\\"bouncing\\\" lines=\\\"3\\\" [data]=\\\"routeResolveData?.description\\\"></app-text-shell>\\n        </p>\\n      </ion-col>\\n    </ion-row>\\n  </section>\\n</ion-content>\\n\"","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Improve Route Resolvers UX\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"showcase-content\\\">\\n  <section class=\\\"showcase-section\\\">\\n    <p>\\n      Lets see the difference between the different implementations of Route Resolvers.\\n    </p>\\n    <h5>Blocking Route Resolvers</h5>\\n    <p>\\n      By default, Angular Route Resolvers won't transition to the page until the Resolver Observable completes.\\n    </p>\\n    <p>\\n      Let's suppose the backend is slow and takes 5 seconds to fetch data and return it to the client, this is what's going to happen.\\n    </p>\\n    <p>\\n      <b>Expected behavior:</b> Page transition will be delayed 5 seconds until the server sends data back to the client.\\n    </p>\\n    <ion-button expand=\\\"block\\\" [routerLink]=\\\"['/showcase/route-resolvers-ux/blocking-resolvers']\\\">Blocking Resolvers</ion-button>\\n  </section>\\n  <section class=\\\"showcase-section\\\">\\n    <h5>NON-Blocking Route Resolvers</h5>\\n    <p>\\n      To avoid waiting for the Observable to complete, we can wrap the base Observable (the one we are getting data from) with a dummy Observable, Subject or Promise that emits the base Observable and immediately completes.\\n    </p>\\n    <p>\\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show a blank state while the server sends data back to the client.\\n    </p>\\n    <ion-button expand=\\\"block\\\" [routerLink]=\\\"['/showcase/route-resolvers-ux/non-blocking-resolvers']\\\">Non-Blocking Resolvers</ion-button>\\n  </section>\\n  <section class=\\\"showcase-section\\\">\\n    <h5>Progressive Shell Resolvers</h5>\\n    <p>\\n      By using the <code>DataStore</code> utility in conjunction with Angular Route Resolvers, we can solve this UX problem and make page transitions immediate.\\n    </p>\\n    <p>\\n      This approach uses a non-blocking Resolver in conjunction with the <code>DataStore</code> utility.\\n    </p>\\n    <p>\\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show some shell elements while the server sends data back to the client.\\n    </p>\\n    <ion-button expand=\\\"block\\\" [routerLink]=\\\"['/showcase/route-resolvers-ux/progressive-shell-resolvers']\\\">Progressive Shell Resolvers</ion-button>\\n  </section>\\n</ion-content>\\n\"","module.exports = \".showcase-content {\\n  --background: var(--app-background-shade);\\n}\\n.showcase-content .showcase-section {\\n  margin: 20px 20px 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbWFrZXIvRGVza3RvcC9JTUFLRVIvQUFBX2ltYWtlcl9zdWJzY3JpcHRpb24vaW9uVm9pY2Uvc3JjL2FwcC9zaG93Y2FzZS9yb3V0ZS1yZXNvbHZlcnMtdXgvYmxvY2tpbmctcmVzb2x2ZXJzL2Jsb2NraW5nLXJlc29sdmVycy5wYWdlLnNjc3MiLCJzcmMvYXBwL3Nob3djYXNlL3JvdXRlLXJlc29sdmVycy11eC9ibG9ja2luZy1yZXNvbHZlcnMvYmxvY2tpbmctcmVzb2x2ZXJzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlDQUFBO0FDQ0Y7QURDRTtFQUNFLHVCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9zaG93Y2FzZS9yb3V0ZS1yZXNvbHZlcnMtdXgvYmxvY2tpbmctcmVzb2x2ZXJzL2Jsb2NraW5nLXJlc29sdmVycy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2hvd2Nhc2UtY29udGVudCB7XG4gIC0tYmFja2dyb3VuZDogdmFyKC0tYXBwLWJhY2tncm91bmQtc2hhZGUpO1xuXG4gIC5zaG93Y2FzZS1zZWN0aW9uIHtcbiAgICBtYXJnaW46IDIwcHggMjBweCAxMDBweDtcbiAgfVxufVxuIiwiLnNob3djYXNlLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IHZhcigtLWFwcC1iYWNrZ3JvdW5kLXNoYWRlKTtcbn1cbi5zaG93Y2FzZS1jb250ZW50IC5zaG93Y2FzZS1zZWN0aW9uIHtcbiAgbWFyZ2luOiAyMHB4IDIwcHggMTAwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// You can also use a Class object as a shell model\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\n\n@Component({\n  selector: 'app-showcase-blocking-resolvers',\n  templateUrl: './blocking-resolvers.page.html',\n  styleUrls: ['./blocking-resolvers.page.scss']\n})\nexport class BlockingResovlersPage implements OnInit {\n  // We will assign data coming from the Route Resolver to this property\n  routeResolveData: ShowcaseShellModel;\n\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    console.log('Showcase Blocking Resovlers - ngOnInit()');\n\n    if (this.route && this.route.data) {\n      const dataObservable = this.route.data;\n      console.log('Showcase Blocking Resovlers - Route Resolve Observable => dataObservable: ', dataObservable);\n\n      if (dataObservable) {\n        dataObservable.subscribe(observableValue => {\n          const pageData: ShowcaseShellModel = observableValue['data'];\n          // tslint:disable-next-line:max-line-length\n          console.log('Showcase Blocking Resovlers - Subscribe to dataObservable (will emmit just one value) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\n          if (pageData) {\n            this.routeResolveData = pageData;\n          }\n        });\n      } else {\n        console.warn('No dataObservable coming from Route Resolver data');\n      }\n    } else {\n      console.warn('No data coming from Route Resolver');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\n\nimport { defer } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { ShowcaseService } from '../../showcase.service';\n\n@Injectable()\nexport class BlockingResolver implements Resolve<any> {\n  private loadingElement: any;\n\n  constructor(\n    private showcaseService: ShowcaseService,\n    private loadingController: LoadingController\n  ) { }\n\n  async presentLoader() {\n    this.loadingElement = await this.loadingController.create({\n      message: 'Loading ...'\n    });\n\n    await this.loadingElement.present();\n  }\n\n  async dismissLoader() {\n    if (this.loadingElement) {\n      await this.loadingElement.dismiss();\n    }\n  }\n\n  resolve() {\n    // WITHOUT LOADING INDICATOR\n\n    // Base Observable (where we get data from)\n    // const dataObservable = this.showcaseService.getData();\n\n    // Basic Resolver that returns the base Observable\n    // return dataObservable;\n\n\n    // WITH LOADING INDICATOR\n\n    // Base Observable (where we get data from)\n    const dataObservable = this.showcaseService.getDataSourceWithDelay().pipe(\n      finalize(() => {\n        console.log('dataObservable COMPLETED - HIDE LOADER');\n        this.dismissLoader();\n      })\n    );\n\n    const deferedObservable = defer(() => {\n      // Will be logged at the moment of subscription\n      console.log('dataObservable STARTED - SHOW LOADER');\n      this.presentLoader();\n      return dataObservable;\n    });\n\n    // Basic Resolver that returns the base Observable\n    return deferedObservable;\n  }\n}\n","module.exports = \".showcase-content {\\n  --background: var(--app-background-shade);\\n}\\n.showcase-content .showcase-section {\\n  margin: 20px 20px 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbWFrZXIvRGVza3RvcC9JTUFLRVIvQUFBX2ltYWtlcl9zdWJzY3JpcHRpb24vaW9uVm9pY2Uvc3JjL2FwcC9zaG93Y2FzZS9yb3V0ZS1yZXNvbHZlcnMtdXgvbm9uLWJsb2NraW5nLXJlc29sdmVycy9ub24tYmxvY2tpbmctcmVzb2x2ZXJzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvc2hvd2Nhc2Uvcm91dGUtcmVzb2x2ZXJzLXV4L25vbi1ibG9ja2luZy1yZXNvbHZlcnMvbm9uLWJsb2NraW5nLXJlc29sdmVycy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5Q0FBQTtBQ0NGO0FEQ0U7RUFDRSx1QkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvc2hvd2Nhc2Uvcm91dGUtcmVzb2x2ZXJzLXV4L25vbi1ibG9ja2luZy1yZXNvbHZlcnMvbm9uLWJsb2NraW5nLXJlc29sdmVycy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2hvd2Nhc2UtY29udGVudCB7XG4gIC0tYmFja2dyb3VuZDogdmFyKC0tYXBwLWJhY2tncm91bmQtc2hhZGUpO1xuXG4gIC5zaG93Y2FzZS1zZWN0aW9uIHtcbiAgICBtYXJnaW46IDIwcHggMjBweCAxMDBweDtcbiAgfVxufVxuIiwiLnNob3djYXNlLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IHZhcigtLWFwcC1iYWNrZ3JvdW5kLXNoYWRlKTtcbn1cbi5zaG93Y2FzZS1jb250ZW50IC5zaG93Y2FzZS1zZWN0aW9uIHtcbiAgbWFyZ2luOiAyMHB4IDIwcHggMTAwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// You can also use a Class object as a shell model\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\n\n@Component({\n  selector: 'app-showcase-non-blocking-resolvers',\n  templateUrl: './non-blocking-resolvers.page.html',\n  styleUrls: ['./non-blocking-resolvers.page.scss']\n})\nexport class NonBlockingResolversPage implements OnInit {\n  // We will assign data coming from the Route Resolver to this property\n  routeResolveData: ShowcaseShellModel;\n\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    console.log('Showcase NON Blocking Resovlers - ngOnInit()');\n\n    if (this.route && this.route.data) {\n      // We resolved a promise for the data Observable\n      const promiseObservable = this.route.data;\n      console.log('Showcase NON Blocking Resovlers - Route Resolve Observable => promiseObservable: ', promiseObservable);\n\n      if (promiseObservable) {\n        promiseObservable.subscribe(promiseValue => {\n          const dataObservable = promiseValue['data'];\n          console.log('Showcase NON Blocking Resovlers - Subscribe to promiseObservable => dataObservable: ', dataObservable);\n\n          if (dataObservable) {\n            dataObservable.subscribe(observableValue => {\n              const pageData: ShowcaseShellModel = observableValue;\n              // tslint:disable-next-line:max-line-length\n              console.log('Showcase NON Blocking Resovlers - Subscribe to dataObservable (will emmit just one value) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\n              if (pageData) {\n                this.routeResolveData = pageData;\n              }\n            });\n          } else {\n            console.warn('No dataObservable coming from Route Resolver promiseObservable');\n          }\n        });\n      } else {\n        console.warn('No promiseObservable coming from Route Resolver data');\n      }\n    } else {\n      console.warn('No data coming from Route Resolver');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { ShowcaseService } from '../../showcase.service';\n\n@Injectable()\nexport class NonBlockingResolver implements Resolve<any> {\n\n  constructor(private showcaseService: ShowcaseService) {}\n\n  resolve() {\n\n    // Base Observable (where we get data from)\n    const dataObservable = this.showcaseService.getDataSourceWithDelay();\n\n    // NON-BLOCKING RESOLVERS\n\n    // Resolver using a ReplySubject that emits the base Observable and then completes\n    // const subject = new ReplaySubject();\n    // subject.next(dataObservable);\n    // subject.complete();\n    // return subject;\n\n    // Resolver using an Observable that emits the base Observable and then completes\n    // const observable = Observable.create((observer) => {\n    //   observer.next(dataObservable);\n    //   observer.complete();\n    // });\n    // return observable;\n\n    // Resolver using a Promise that resolves the base Observable\n    const observablePromise = new Promise((resolve, reject) => {\n      resolve(dataObservable);\n    });\n    return observablePromise;\n  }\n}\n","module.exports = \".showcase-content {\\n  --background: var(--app-background-shade);\\n}\\n.showcase-content .showcase-section {\\n  margin: 20px 20px 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbWFrZXIvRGVza3RvcC9JTUFLRVIvQUFBX2ltYWtlcl9zdWJzY3JpcHRpb24vaW9uVm9pY2Uvc3JjL2FwcC9zaG93Y2FzZS9yb3V0ZS1yZXNvbHZlcnMtdXgvcHJvZ3Jlc3NpdmUtc2hlbGwtcmVzb2x2ZXJzL3Byb2dyZXNzaXZlLXNoZWxsLXJlc29sdmVycy5wYWdlLnNjc3MiLCJzcmMvYXBwL3Nob3djYXNlL3JvdXRlLXJlc29sdmVycy11eC9wcm9ncmVzc2l2ZS1zaGVsbC1yZXNvbHZlcnMvcHJvZ3Jlc3NpdmUtc2hlbGwtcmVzb2x2ZXJzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlDQUFBO0FDQ0Y7QURDRTtFQUNFLHVCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9zaG93Y2FzZS9yb3V0ZS1yZXNvbHZlcnMtdXgvcHJvZ3Jlc3NpdmUtc2hlbGwtcmVzb2x2ZXJzL3Byb2dyZXNzaXZlLXNoZWxsLXJlc29sdmVycy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2hvd2Nhc2UtY29udGVudCB7XG4gIC0tYmFja2dyb3VuZDogdmFyKC0tYXBwLWJhY2tncm91bmQtc2hhZGUpO1xuXG4gIC5zaG93Y2FzZS1zZWN0aW9uIHtcbiAgICBtYXJnaW46IDIwcHggMjBweCAxMDBweDtcbiAgfVxufVxuIiwiLnNob3djYXNlLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IHZhcigtLWFwcC1iYWNrZ3JvdW5kLXNoYWRlKTtcbn1cbi5zaG93Y2FzZS1jb250ZW50IC5zaG93Y2FzZS1zZWN0aW9uIHtcbiAgbWFyZ2luOiAyMHB4IDIwcHggMTAwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// You can also use a Class object as a shell model\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\n\n@Component({\n  selector: 'app-showcase-progressive-shell-resolvers',\n  templateUrl: './progressive-shell-resolvers.page.html',\n  styleUrls: ['./progressive-shell-resolvers.page.scss']\n})\nexport class ProgressiveShellResovlersPage implements OnInit {\n  // We will assign data coming from the Route Resolver to this property\n  routeResolveData: ShowcaseShellModel;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    console.log('Showcase Progressive Shell Resovlers - ngOnInit()');\n\n    this.route.data.subscribe((resolvedRouteData) => {\n      const dataStore = resolvedRouteData['data'];\n\n      dataStore.state.subscribe(\n        (state) => {\n          this.routeResolveData = state;\n        },\n        (error) => {}\n      );\n    },\n    (error) => {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { ShowcaseService } from '../../showcase.service';\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\nimport { Observable } from 'rxjs';\nimport { DataStore } from '../../../shell/data-store';\n\n@Injectable()\nexport class ProgressiveShellResolver implements Resolve<any> {\n\n  constructor(private showcaseService: ShowcaseService) {}\n\n  resolve() {\n    const dataSource: Observable<ShowcaseShellModel> = this.showcaseService.getDataSourceWithDelay();\n    const dataStore: DataStore<ShowcaseShellModel> = this.showcaseService.getSimpleDataStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { RouteResovlersUXPage } from './route-resolvers-ux.page';\nimport { NonBlockingResolversPage } from './non-blocking-resolvers/non-blocking-resolvers.page';\nimport { BlockingResovlersPage } from './blocking-resolvers/blocking-resolvers.page';\nimport { ProgressiveShellResovlersPage } from './progressive-shell-resolvers/progressive-shell-resolvers.page';\n\nimport { BlockingResolver } from './blocking-resolvers/blocking.resolver';\nimport { NonBlockingResolver } from './non-blocking-resolvers/non-blocking.resolver';\nimport { ProgressiveShellResolver } from './progressive-shell-resolvers/progressive-shell.resolver';\n\nimport { ShowcaseService } from '../showcase.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RouteResovlersUXPage\n  },\n  {\n    path: 'blocking-resolvers',\n    component: BlockingResovlersPage,\n    resolve: {\n      data: BlockingResolver\n    }\n  },\n  {\n    path: 'non-blocking-resolvers',\n    component: NonBlockingResolversPage,\n    resolve: {\n      data: NonBlockingResolver\n    }\n  },\n  {\n    path: 'progressive-shell-resolvers',\n    component: ProgressiveShellResovlersPage,\n    resolve: {\n      data: ProgressiveShellResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    HttpClientModule\n  ],\n  declarations: [\n    RouteResovlersUXPage,\n    BlockingResovlersPage,\n    NonBlockingResolversPage,\n    ProgressiveShellResovlersPage\n  ],\n  providers: [\n    BlockingResolver,\n    NonBlockingResolver,\n    ProgressiveShellResolver,\n    ShowcaseService\n  ]\n})\nexport class RouteResolversUXModule {}\n","module.exports = \".showcase-content {\\n  --background: var(--app-background-shade);\\n}\\n.showcase-content .showcase-section {\\n  margin: 20px 20px 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbWFrZXIvRGVza3RvcC9JTUFLRVIvQUFBX2ltYWtlcl9zdWJzY3JpcHRpb24vaW9uVm9pY2Uvc3JjL2FwcC9zaG93Y2FzZS9yb3V0ZS1yZXNvbHZlcnMtdXgvcm91dGUtcmVzb2x2ZXJzLXV4LnBhZ2Uuc2NzcyIsInNyYy9hcHAvc2hvd2Nhc2Uvcm91dGUtcmVzb2x2ZXJzLXV4L3JvdXRlLXJlc29sdmVycy11eC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5Q0FBQTtBQ0NGO0FEQ0U7RUFDRSx1QkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvc2hvd2Nhc2Uvcm91dGUtcmVzb2x2ZXJzLXV4L3JvdXRlLXJlc29sdmVycy11eC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2hvd2Nhc2UtY29udGVudCB7XG4gIC0tYmFja2dyb3VuZDogdmFyKC0tYXBwLWJhY2tncm91bmQtc2hhZGUpO1xuXG4gIC5zaG93Y2FzZS1zZWN0aW9uIHtcbiAgICBtYXJnaW46IDIwcHggMjBweCAxMDBweDtcbiAgfVxufVxuIiwiLnNob3djYXNlLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IHZhcigtLWFwcC1iYWNrZ3JvdW5kLXNoYWRlKTtcbn1cbi5zaG93Y2FzZS1jb250ZW50IC5zaG93Y2FzZS1zZWN0aW9uIHtcbiAgbWFyZ2luOiAyMHB4IDIwcHggMTAwcHg7XG59Il19 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-showcase-route-resolvers-ux',\n  templateUrl: './route-resolvers-ux.page.html',\n  styleUrls: ['./route-resolvers-ux.page.scss']\n})\n\nexport class RouteResovlersUXPage {\n\n  constructor() { }\n\n}\n"],"sourceRoot":"webpack:///"}